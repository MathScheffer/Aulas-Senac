/*
• Faça um procedimento, considerando o modelo de cliente,
pedido, produto e movimento, de forma que:
– A) não permita excluir um produto o qual já tenha sido pedido;
– B) ao tentar inserir inserir um novo produto, que o seu nome tenha
valor;
– Atenção: defina a qtd de parametros necessários para tratar estas
duas regras acima citadas.*/


select * from pedido;
select * from cliente;
select * from movimento;
select * from produto;

DROP FUNCTION FN_MOVIMENTAR(int, int, char, double precision, char);
CREATE OR REPLACE FUNCTION FN_MOVIMENTAR(chave int, _cod_prod int, nome char(30),
										 preco double precision, categoria char(30))
	RETURNs VOID AS
	$$
	<<principal>>
	DECLARE
		_PRODUTO_EXISTE int;
		_PRODUTO_PEDIDO int;
	BEGIN
	
	SELECT cod_prod INTO _PRODUTO_EXISTE FROM produto WHERE cod_prod = _cod_prod  LIMIT 1;
	IF NOT FOUND THEN
		RAISE EXCEPTION 'Produto % não existe!',_cod_prod;
		
	SELECT p.cod_prod  INTO _PRODUTO_PEDIDO FROM produto as p, movimento
					WHERE p.cod_prod = movimento.cod_prod
					AND p.cod_prod = 1 LIMIT 1;	
					
	BEGIN
		IF chave = 1 THEN
			RAISE NOTICE 'Chave vai adicionar produto';

		ELSIF chave = 0 THEN

			RAISE NOTICE 'Chave indica que irá excluir pedido';

			/*<<verifica_produto>>
			BEGIN
				SELECT cod_prod INTO _PRODUTO_EXISTE FROM produto WHERE cod_prod = _cod_prod  LIMIT 1;
				EXCEPTION
					WHEN NO_DATA_FOUND THEN
						RAISE EXCEPTION 'Produto de código % não existe', _cod_prod;
			END;
			<<verifica_produto_pedido>>
			BEGIN
				SELECT p.cod_prod  INTO _PRODUTO_PEDIDO FROM produto as p, movimento
					WHERE p.cod_prod = movimento.cod_prod
					AND p.cod_prod = 1 LIMIT 1;	
			END;*/
			
			IF _PRODUTO_EXISTE NOTNULL 
				AND _PRODUTO_PEDIDO ISNULL
				THEN 
					DELETE  FROM produto WHERE cod_prod = _cod_prod;
					RAISE NOTICE 'Produto % excluído!', nome;
			ELSE
				raise notice 'não foi possível excluir.';
			END IF;

		ELSE
			RAISE EXCEPTION 'Chave % não é suportada! ', chave;
		END IF;
		END;
END;
$$ LANGUAGE PLPGSQL;
	
SELECT FN_MOVIMENTAR('3',7,'teste',00.00,'prod de teste')

DROP FUNCTION bla(integer);
CREATE OR REPLACE FUNCTION BLA(_cod_prod int) RETURNS VOID AS
$$
<<principal>>
DECLARE
	PRODUTO_EXISTE int;
BEGIN
	BEGIN
		SELECT * INTO STRICT principal.PRODUTO_EXISTE from produto where produto.cod_prod = _cod_prod;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				RAISE EXCEPTION 'Produto de código % não existe', _cod_prod;
	END;
	DELETE FROM produto WHERE produto.cod_prod = _cod_prod;
END;
$$ LANGUAGE PLPGSQL;
	
BEGIN TRANSACTION
	SELECT  BLA(6);
	SELECT FN_MOVIMENTAR('0',1,'teste',00.00,'prod de teste')
	DELETE FROM produto WHERE produto.cod_prod = 6;
ROLLBACK
select * from produto;
	
	
